{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ascil\\\\ecommerce-website\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport playerPlaneImage from './images/player-plane.png';\nimport enemyPlaneImage from './images/enemy-plane.png';\nimport bulletImage from './images/bullet.png';\nimport enemyBulletImage from './images/enemy-bullet.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [playerPlane, setPlayerPlane] = useState({\n    x: 400,\n    y: 500,\n    health: 100,\n    ammo: 100\n  });\n  const [enemies, setEnemies] = useState([]);\n  const [bullets, setBullets] = useState([]);\n  const [enemyBullets, setEnemyBullets] = useState([]);\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    const handlePlayerMovement = event => {\n      // Update playerPlane position based on arrow keys\n      // Adjust the x and y coordinates based on your game logic\n    };\n    const handlePlayerShoot = () => {\n      // Add logic to shoot bullets from the player's plane\n      // Adjust the bullet position and add it to the bullets array\n    };\n    const handleEnemyMovement = () => {\n      // Add logic to move the enemies\n      // Adjust the enemy position based on your game logic\n    };\n    const handleEnemyShoot = () => {\n      // Add logic for enemies to shoot bullets\n      // Adjust the bullet position and add it to the enemyBullets array\n    };\n    const handleCollisions = () => {\n      // Add logic to check for collisions between bullets and enemies\n      // Adjust health, score, and remove objects accordingly\n    };\n    const handleGameLoop = () => {\n      // Add logic for the main game loop\n      // Call movement, shooting, collision, and other game-related functions here\n    };\n\n    // Event listeners for player movement and shooting\n    window.addEventListener('keydown', handlePlayerMovement);\n    window.addEventListener('keydown', handlePlayerShoot);\n\n    // Game loop\n    const gameLoopInterval = setInterval(handleGameLoop, 1000 / 60); // 60 FPS\n\n    // Clean up event listeners and game loop on component unmount\n    return () => {\n      window.removeEventListener('keydown', handlePlayerMovement);\n      window.removeEventListener('keydown', handlePlayerShoot);\n      clearInterval(gameLoopInterval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"player-plane\",\n        src: playerPlaneImage,\n        alt: \"Player Plane\",\n        style: {\n          left: playerPlane.x,\n          top: playerPlane.y\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), enemies.map((enemy, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"enemy-plane\",\n        src: enemyPlaneImage,\n        alt: \"Enemy Plane\",\n        style: {\n          left: enemy.x,\n          top: enemy.y\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)), bullets.map((bullet, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"bullet\",\n        src: bulletImage,\n        alt: \"Bullet\",\n        style: {\n          left: bullet.x,\n          top: bullet.y\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)), enemyBullets.map((bullet, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"enemy-bullet\",\n        src: enemyBulletImage,\n        alt: \"Enemy Bullet\",\n        style: {\n          left: bullet.x,\n          top: bullet.y\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LGCoNSxPYQWrMk/WBZcgmY+W/mA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","playerPlaneImage","enemyPlaneImage","bulletImage","enemyBulletImage","jsxDEV","_jsxDEV","App","_s","playerPlane","setPlayerPlane","x","y","health","ammo","enemies","setEnemies","bullets","setBullets","enemyBullets","setEnemyBullets","score","setScore","handlePlayerMovement","event","handlePlayerShoot","handleEnemyMovement","handleEnemyShoot","handleCollisions","handleGameLoop","window","addEventListener","gameLoopInterval","setInterval","removeEventListener","clearInterval","className","children","src","alt","style","left","top","fileName","_jsxFileName","lineNumber","columnNumber","map","enemy","index","bullet","_c","$RefreshReg$"],"sources":["C:/Users/ascil/ecommerce-website/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport playerPlaneImage from './images/player-plane.png';\nimport enemyPlaneImage from './images/enemy-plane.png';\nimport bulletImage from './images/bullet.png';\nimport enemyBulletImage from './images/enemy-bullet.png';\n\nconst App = () => {\n  const [playerPlane, setPlayerPlane] = useState({\n    x: 400,\n    y: 500,\n    health: 100,\n    ammo: 100,\n  });\n\n  const [enemies, setEnemies] = useState([]);\n  const [bullets, setBullets] = useState([]);\n  const [enemyBullets, setEnemyBullets] = useState([]);\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    const handlePlayerMovement = (event) => {\n      // Update playerPlane position based on arrow keys\n      // Adjust the x and y coordinates based on your game logic\n    };\n\n    const handlePlayerShoot = () => {\n      // Add logic to shoot bullets from the player's plane\n      // Adjust the bullet position and add it to the bullets array\n    };\n\n    const handleEnemyMovement = () => {\n      // Add logic to move the enemies\n      // Adjust the enemy position based on your game logic\n    };\n\n    const handleEnemyShoot = () => {\n      // Add logic for enemies to shoot bullets\n      // Adjust the bullet position and add it to the enemyBullets array\n    };\n\n    const handleCollisions = () => {\n      // Add logic to check for collisions between bullets and enemies\n      // Adjust health, score, and remove objects accordingly\n    };\n\n    const handleGameLoop = () => {\n      // Add logic for the main game loop\n      // Call movement, shooting, collision, and other game-related functions here\n    };\n\n    // Event listeners for player movement and shooting\n    window.addEventListener('keydown', handlePlayerMovement);\n    window.addEventListener('keydown', handlePlayerShoot);\n\n    // Game loop\n    const gameLoopInterval = setInterval(handleGameLoop, 1000 / 60); // 60 FPS\n\n    // Clean up event listeners and game loop on component unmount\n    return () => {\n      window.removeEventListener('keydown', handlePlayerMovement);\n      window.removeEventListener('keydown', handlePlayerShoot);\n      clearInterval(gameLoopInterval);\n    };\n  }, []);\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"game-screen\">\n        {/* Render player plane */}\n        <img\n          className=\"player-plane\"\n          src={playerPlaneImage}\n          alt=\"Player Plane\"\n          style={{ left: playerPlane.x, top: playerPlane.y }}\n        />\n\n        {/* Render enemies */}\n        {enemies.map((enemy, index) => (\n          <img\n            key={index}\n            className=\"enemy-plane\"\n            src={enemyPlaneImage}\n            alt=\"Enemy Plane\"\n            style={{ left: enemy.x, top: enemy.y }}\n          />\n        ))}\n\n        {/* Render player bullets */}\n        {bullets.map((bullet, index) => (\n          <img\n            key={index}\n            className=\"bullet\"\n            src={bulletImage}\n            alt=\"Bullet\"\n            style={{ left: bullet.x, top: bullet.y }}\n          />\n        ))}\n\n        {/* Render enemy bullets */}\n        {enemyBullets.map((bullet, index) => (\n          <img\n            key={index}\n            className=\"enemy-bullet\"\n            src={enemyBulletImage}\n            alt=\"Enemy Bullet\"\n            style={{ left: bullet.x, top: bullet.y }}\n          />\n        ))}\n      </div>\n\n      {/* Display score, health, ammo, and other game-related UI */}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}