{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ascil\\\\ecommerce-website\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [playerPlane, setPlayerPlane] = useState({\n    x: 0,\n    y: 0,\n    ammo: 5,\n    health: 100\n  });\n  const [enemies, setEnemies] = useState([]);\n  const [score, setScore] = useState(0);\n\n  // Function to handle player movement\n  const handlePlayerMovement = event => {\n    const {\n      key\n    } = event;\n    const speed = 10;\n\n    // Move player plane based on arrow keys\n    if (key === 'ArrowUp') {\n      setPlayerPlane(prevPlane => ({\n        ...prevPlane,\n        y: prevPlane.y - speed\n      }));\n    } else if (key === 'ArrowDown') {\n      setPlayerPlane(prevPlane => ({\n        ...prevPlane,\n        y: prevPlane.y + speed\n      }));\n    } else if (key === 'ArrowLeft') {\n      setPlayerPlane(prevPlane => ({\n        ...prevPlane,\n        x: prevPlane.x - speed\n      }));\n    } else if (key === 'ArrowRight') {\n      setPlayerPlane(prevPlane => ({\n        ...prevPlane,\n        x: prevPlane.x + speed\n      }));\n    }\n  };\n\n  // Function to handle player shooting\n  const handlePlayerShoot = () => {\n    if (playerPlane.ammo > 0) {\n      // Create a new bullet object\n      const bullet = {\n        x: playerPlane.x,\n        y: playerPlane.y\n      };\n      setPlayerPlane(prevPlane => ({\n        ...prevPlane,\n        ammo: prevPlane.ammo - 1\n      }));\n\n      // Add the bullet to the enemy array\n      setEnemies(prevEnemies => [...prevEnemies, bullet]);\n    }\n  };\n\n  // Function to check collision between bullets and enemies\n  const checkCollision = () => {\n    const updatedEnemies = [...enemies];\n    updatedEnemies.forEach((enemy, enemyIndex) => {\n      if (enemy.x === playerPlane.x && enemy.y === playerPlane.y) {\n        // Player collided with enemy\n        setPlayerPlane(prevPlane => ({\n          ...prevPlane,\n          health: prevPlane.health - 10\n        }));\n        if (playerPlane.health <= 0) {\n          // Game over condition\n          alert('Game over!');\n          resetGame();\n        }\n      }\n      updatedEnemies.forEach((bullet, bulletIndex) => {\n        if (bullet.x === enemy.x && bullet.y === enemy.y) {\n          // Bullet collided with enemy\n          updatedEnemies.splice(enemyIndex, 1);\n          setScore(prevScore => prevScore + 10);\n        }\n      });\n    });\n    setEnemies(updatedEnemies);\n  };\n\n  // Function to reset the game\n  const resetGame = () => {\n    setPlayerPlane({\n      x: 0,\n      y: 0,\n      ammo: 5,\n      health: 100\n    });\n    setEnemies([]);\n    setScore(0);\n  };\n  useEffect(() => {\n    // Event listener for player movement\n    window.addEventListener('keydown', handlePlayerMovement);\n\n    // Interval for enemy movement and collision detection\n    const gameInterval = setInterval(() => {\n      setEnemies(prevEnemies => prevEnemies.map(enemy => ({\n        ...enemy,\n        x: enemy.x - 5 // Adjust enemy speed here\n      })));\n\n      checkCollision();\n    }, 100);\n    return () => {\n      window.removeEventListener('keydown', handlePlayerMovement);\n      clearInterval(gameInterval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shooter Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Player Ammo: \", playerPlane.ammo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Player Health: \", playerPlane.health]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: '500px',\n        height: '500px',\n        border: '1px solid black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: playerPlane.y + 'px',\n          left: playerPlane.x + 'px',\n          width: '20px',\n          height: '20px',\n          background: 'blue'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), enemies.map((enemy, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: enemy.y + 'px',\n          left: enemy.x + 'px',\n          width: '10px',\n          height: '10px',\n          background: 'red'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlayerShoot,\n      children: \"Shoot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UJv4xK+Kyykd07bekNmKACNI6eE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","playerPlane","setPlayerPlane","x","y","ammo","health","enemies","setEnemies","score","setScore","handlePlayerMovement","event","key","speed","prevPlane","handlePlayerShoot","bullet","prevEnemies","checkCollision","updatedEnemies","forEach","enemy","enemyIndex","alert","resetGame","bulletIndex","splice","prevScore","window","addEventListener","gameInterval","setInterval","map","removeEventListener","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","width","height","border","top","left","background","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ascil/ecommerce-website/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst App = () => {\n  const [playerPlane, setPlayerPlane] = useState({ x: 0, y: 0, ammo: 5, health: 100 });\n  const [enemies, setEnemies] = useState([]);\n  const [score, setScore] = useState(0);\n\n  // Function to handle player movement\n  const handlePlayerMovement = (event) => {\n    const { key } = event;\n    const speed = 10;\n\n    // Move player plane based on arrow keys\n    if (key === 'ArrowUp') {\n      setPlayerPlane((prevPlane) => ({ ...prevPlane, y: prevPlane.y - speed }));\n    } else if (key === 'ArrowDown') {\n      setPlayerPlane((prevPlane) => ({ ...prevPlane, y: prevPlane.y + speed }));\n    } else if (key === 'ArrowLeft') {\n      setPlayerPlane((prevPlane) => ({ ...prevPlane, x: prevPlane.x - speed }));\n    } else if (key === 'ArrowRight') {\n      setPlayerPlane((prevPlane) => ({ ...prevPlane, x: prevPlane.x + speed }));\n    }\n  };\n\n  // Function to handle player shooting\n  const handlePlayerShoot = () => {\n    if (playerPlane.ammo > 0) {\n      // Create a new bullet object\n      const bullet = { x: playerPlane.x, y: playerPlane.y };\n      setPlayerPlane((prevPlane) => ({ ...prevPlane, ammo: prevPlane.ammo - 1 }));\n\n      // Add the bullet to the enemy array\n      setEnemies((prevEnemies) => [...prevEnemies, bullet]);\n    }\n  };\n\n  // Function to check collision between bullets and enemies\n  const checkCollision = () => {\n    const updatedEnemies = [...enemies];\n\n    updatedEnemies.forEach((enemy, enemyIndex) => {\n      if (enemy.x === playerPlane.x && enemy.y === playerPlane.y) {\n        // Player collided with enemy\n        setPlayerPlane((prevPlane) => ({ ...prevPlane, health: prevPlane.health - 10 }));\n\n        if (playerPlane.health <= 0) {\n          // Game over condition\n          alert('Game over!');\n          resetGame();\n        }\n      }\n\n      updatedEnemies.forEach((bullet, bulletIndex) => {\n        if (bullet.x === enemy.x && bullet.y === enemy.y) {\n          // Bullet collided with enemy\n          updatedEnemies.splice(enemyIndex, 1);\n          setScore((prevScore) => prevScore + 10);\n        }\n      });\n    });\n\n    setEnemies(updatedEnemies);\n  };\n\n  // Function to reset the game\n  const resetGame = () => {\n    setPlayerPlane({ x: 0, y: 0, ammo: 5, health: 100 });\n    setEnemies([]);\n    setScore(0);\n  };\n\n  useEffect(() => {\n    // Event listener for player movement\n    window.addEventListener('keydown', handlePlayerMovement);\n\n    // Interval for enemy movement and collision detection\n    const gameInterval = setInterval(() => {\n      setEnemies((prevEnemies) =>\n        prevEnemies.map((enemy) => ({\n          ...enemy,\n          x: enemy.x - 5, // Adjust enemy speed here\n        }))\n      );\n\n      checkCollision();\n    }, 100);\n\n    return () => {\n      window.removeEventListener('keydown', handlePlayerMovement);\n      clearInterval(gameInterval);\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>Shooter Game</h1>\n      <div>\n        <p>Player Ammo: {playerPlane.ammo}</p>\n        <p>Player Health: {playerPlane.health}</p>\n        <p>Score: {score}</p>\n      </div>\n      <div\n        style={{\n          position: 'relative',\n          width: '500px',\n          height: '500px',\n          border: '1px solid black',\n        }}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: playerPlane.y + 'px',\n            left: playerPlane.x + 'px',\n            width: '20px',\n            height: '20px',\n            background: 'blue',\n          }}\n        ></div>\n        {enemies.map((enemy, index) => (\n          <div\n            key={index}\n            style={{\n              position: 'absolute',\n              top: enemy.y + 'px',\n              left: enemy.x + 'px',\n              width: '10px',\n              height: '10px',\n              background: 'red',\n            }}\n          ></div>\n        ))}\n      </div>\n      <button onClick={handlePlayerShoot}>Shoot</button>\n      <button onClick={resetGame}>Reset</button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE,CAAC;IAAEC,IAAI,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAI,CAAC,CAAC;EACpF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACA,MAAMgB,oBAAoB,GAAIC,KAAK,IAAK;IACtC,MAAM;MAAEC;IAAI,CAAC,GAAGD,KAAK;IACrB,MAAME,KAAK,GAAG,EAAE;;IAEhB;IACA,IAAID,GAAG,KAAK,SAAS,EAAE;MACrBX,cAAc,CAAEa,SAAS,KAAM;QAAE,GAAGA,SAAS;QAAEX,CAAC,EAAEW,SAAS,CAACX,CAAC,GAAGU;MAAM,CAAC,CAAC,CAAC;IAC3E,CAAC,MAAM,IAAID,GAAG,KAAK,WAAW,EAAE;MAC9BX,cAAc,CAAEa,SAAS,KAAM;QAAE,GAAGA,SAAS;QAAEX,CAAC,EAAEW,SAAS,CAACX,CAAC,GAAGU;MAAM,CAAC,CAAC,CAAC;IAC3E,CAAC,MAAM,IAAID,GAAG,KAAK,WAAW,EAAE;MAC9BX,cAAc,CAAEa,SAAS,KAAM;QAAE,GAAGA,SAAS;QAAEZ,CAAC,EAAEY,SAAS,CAACZ,CAAC,GAAGW;MAAM,CAAC,CAAC,CAAC;IAC3E,CAAC,MAAM,IAAID,GAAG,KAAK,YAAY,EAAE;MAC/BX,cAAc,CAAEa,SAAS,KAAM;QAAE,GAAGA,SAAS;QAAEZ,CAAC,EAAEY,SAAS,CAACZ,CAAC,GAAGW;MAAM,CAAC,CAAC,CAAC;IAC3E;EACF,CAAC;;EAED;EACA,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIf,WAAW,CAACI,IAAI,GAAG,CAAC,EAAE;MACxB;MACA,MAAMY,MAAM,GAAG;QAAEd,CAAC,EAAEF,WAAW,CAACE,CAAC;QAAEC,CAAC,EAAEH,WAAW,CAACG;MAAE,CAAC;MACrDF,cAAc,CAAEa,SAAS,KAAM;QAAE,GAAGA,SAAS;QAAEV,IAAI,EAAEU,SAAS,CAACV,IAAI,GAAG;MAAE,CAAC,CAAC,CAAC;;MAE3E;MACAG,UAAU,CAAEU,WAAW,IAAK,CAAC,GAAGA,WAAW,EAAED,MAAM,CAAC,CAAC;IACvD;EACF,CAAC;;EAED;EACA,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,cAAc,GAAG,CAAC,GAAGb,OAAO,CAAC;IAEnCa,cAAc,CAACC,OAAO,CAAC,CAACC,KAAK,EAAEC,UAAU,KAAK;MAC5C,IAAID,KAAK,CAACnB,CAAC,KAAKF,WAAW,CAACE,CAAC,IAAImB,KAAK,CAAClB,CAAC,KAAKH,WAAW,CAACG,CAAC,EAAE;QAC1D;QACAF,cAAc,CAAEa,SAAS,KAAM;UAAE,GAAGA,SAAS;UAAET,MAAM,EAAES,SAAS,CAACT,MAAM,GAAG;QAAG,CAAC,CAAC,CAAC;QAEhF,IAAIL,WAAW,CAACK,MAAM,IAAI,CAAC,EAAE;UAC3B;UACAkB,KAAK,CAAC,YAAY,CAAC;UACnBC,SAAS,CAAC,CAAC;QACb;MACF;MAEAL,cAAc,CAACC,OAAO,CAAC,CAACJ,MAAM,EAAES,WAAW,KAAK;QAC9C,IAAIT,MAAM,CAACd,CAAC,KAAKmB,KAAK,CAACnB,CAAC,IAAIc,MAAM,CAACb,CAAC,KAAKkB,KAAK,CAAClB,CAAC,EAAE;UAChD;UACAgB,cAAc,CAACO,MAAM,CAACJ,UAAU,EAAE,CAAC,CAAC;UACpCb,QAAQ,CAAEkB,SAAS,IAAKA,SAAS,GAAG,EAAE,CAAC;QACzC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFpB,UAAU,CAACY,cAAc,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMK,SAAS,GAAGA,CAAA,KAAM;IACtBvB,cAAc,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,IAAI,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;IACpDE,UAAU,CAAC,EAAE,CAAC;IACdE,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd;IACAiC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEnB,oBAAoB,CAAC;;IAExD;IACA,MAAMoB,YAAY,GAAGC,WAAW,CAAC,MAAM;MACrCxB,UAAU,CAAEU,WAAW,IACrBA,WAAW,CAACe,GAAG,CAAEX,KAAK,KAAM;QAC1B,GAAGA,KAAK;QACRnB,CAAC,EAAEmB,KAAK,CAACnB,CAAC,GAAG,CAAC,CAAE;MAClB,CAAC,CAAC,CACJ,CAAC;;MAEDgB,cAAc,CAAC,CAAC;IAClB,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAM;MACXU,MAAM,CAACK,mBAAmB,CAAC,SAAS,EAAEvB,oBAAoB,CAAC;MAC3DwB,aAAa,CAACJ,YAAY,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjC,OAAA;IAAAsC,QAAA,gBACEtC,OAAA;MAAAsC,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB1C,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAAsC,QAAA,GAAG,eAAa,EAACnC,WAAW,CAACI,IAAI;MAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtC1C,OAAA;QAAAsC,QAAA,GAAG,iBAAe,EAACnC,WAAW,CAACK,MAAM;MAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1C1C,OAAA;QAAAsC,QAAA,GAAG,SAAO,EAAC3B,KAAK;MAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACN1C,OAAA;MACE2C,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,OAAO;QACfC,MAAM,EAAE;MACV,CAAE;MAAAT,QAAA,gBAEFtC,OAAA;QACE2C,KAAK,EAAE;UACLC,QAAQ,EAAE,UAAU;UACpBI,GAAG,EAAE7C,WAAW,CAACG,CAAC,GAAG,IAAI;UACzB2C,IAAI,EAAE9C,WAAW,CAACE,CAAC,GAAG,IAAI;UAC1BwC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdI,UAAU,EAAE;QACd;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EACNjC,OAAO,CAAC0B,GAAG,CAAC,CAACX,KAAK,EAAE2B,KAAK,kBACxBnD,OAAA;QAEE2C,KAAK,EAAE;UACLC,QAAQ,EAAE,UAAU;UACpBI,GAAG,EAAExB,KAAK,CAAClB,CAAC,GAAG,IAAI;UACnB2C,IAAI,EAAEzB,KAAK,CAACnB,CAAC,GAAG,IAAI;UACpBwC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdI,UAAU,EAAE;QACd;MAAE,GARGC,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASN,CACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1C,OAAA;MAAQoD,OAAO,EAAElC,iBAAkB;MAAAoB,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClD1C,OAAA;MAAQoD,OAAO,EAAEzB,SAAU;MAAAW,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACxC,EAAA,CAvIID,GAAG;AAAAoD,EAAA,GAAHpD,GAAG;AAyIT,eAAeA,GAAG;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}